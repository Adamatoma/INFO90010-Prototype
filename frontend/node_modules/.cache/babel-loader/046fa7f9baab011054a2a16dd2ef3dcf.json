{"ast":null,"code":"var _jsxFileName = \"/Users/panyutong/Desktop/\\u5B66\\u4E60/INFO90010 IT project/prototype/INFO90010-Prototype/frontend/src/components/Toggle.jsx\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport styles from './index.styl';\n\nclass Toggle extends PureComponent {\n  render() {\n    const {\n      componentType,\n      // eslint-disable-line\n      componentClass: Component,\n      expanded,\n      className,\n      children,\n      ...props\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      role: \"button\",\n      className: cx(className, styles.sidenavToggle),\n      \"aria-expanded\": expanded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.iconBar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.iconBar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.iconBar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }), children);\n  }\n\n} // For component matching\n\n\nToggle.propTypes = {\n  componentType: PropTypes.any,\n  // A custom element for this component.\n  componentClass: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  // Whether the navigation toggle is disabled.\n  disabled: PropTypes.bool,\n  // Whether the side navigation is expanded or collapsed.\n  expanded: PropTypes.bool\n};\nToggle.defaultProps = {\n  componentClass: 'button',\n  disabled: false,\n  expanded: false\n};\nToggle.defaultProps.componentType = Toggle;\nexport default Toggle;","map":{"version":3,"sources":["/Users/panyutong/Desktop/学习/INFO90010 IT project/prototype/INFO90010-Prototype/frontend/src/components/Toggle.jsx"],"names":["cx","PropTypes","React","PureComponent","styles","Toggle","render","componentType","componentClass","Component","expanded","className","children","props","sidenavToggle","iconBar","propTypes","any","oneOfType","string","func","disabled","bool","defaultProps"],"mappings":";AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,MAAN,SAAqBF,aAArB,CAAmC;AAsB/BG,EAAAA,MAAM,GAAG;AACL,UAAM;AACFC,MAAAA,aADE;AACa;AACfC,MAAAA,cAAc,EAAEC,SAFd;AAGFC,MAAAA,QAHE;AAIFC,MAAAA,SAJE;AAKFC,MAAAA,QALE;AAMF,SAAGC;AAND,QAOF,KAAKA,KAPT;AASA,wBACI,oBAAC,SAAD,oBACQA,KADR;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,SAAS,EAAEb,EAAE,CACTW,SADS,EAETP,MAAM,CAACU,aAFE,CAHjB;AAOI,uBAAeJ,QAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBASI;AAAM,MAAA,SAAS,EAAEN,MAAM,CAACW,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,eAUI;AAAM,MAAA,SAAS,EAAEX,MAAM,CAACW,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,eAWI;AAAM,MAAA,SAAS,EAAEX,MAAM,CAACW,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAYKH,QAZL,CADJ;AAgBH;;AAhD8B,C,CAmDnC;;;AAnDMP,M,CACKW,S,GAAY;AACfT,EAAAA,aAAa,EAAEN,SAAS,CAACgB,GADV;AAGf;AACAT,EAAAA,cAAc,EAAEP,SAAS,CAACiB,SAAV,CAAoB,CAChCjB,SAAS,CAACkB,MADsB,EAEhClB,SAAS,CAACmB,IAFsB,CAApB,CAJD;AASf;AACAC,EAAAA,QAAQ,EAAEpB,SAAS,CAACqB,IAVL;AAYf;AACAZ,EAAAA,QAAQ,EAAET,SAAS,CAACqB;AAbL,C;AADjBjB,M,CAgBKkB,Y,GAAe;AAClBf,EAAAA,cAAc,EAAE,QADE;AAElBa,EAAAA,QAAQ,EAAE,KAFQ;AAGlBX,EAAAA,QAAQ,EAAE;AAHQ,C;AAoC1BL,MAAM,CAACkB,YAAP,CAAoBhB,aAApB,GAAoCF,MAApC;AAEA,eAAeA,MAAf","sourcesContent":["import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport styles from './index.styl';\n\nclass Toggle extends PureComponent {\n    static propTypes = {\n        componentType: PropTypes.any,\n\n        // A custom element for this component.\n        componentClass: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.func\n        ]),\n\n        // Whether the navigation toggle is disabled.\n        disabled: PropTypes.bool,\n\n        // Whether the side navigation is expanded or collapsed.\n        expanded: PropTypes.bool\n    };\n    static defaultProps = {\n        componentClass: 'button',\n        disabled: false,\n        expanded: false\n    };\n\n    render() {\n        const {\n            componentType, // eslint-disable-line\n            componentClass: Component,\n            expanded,\n            className,\n            children,\n            ...props\n        } = this.props;\n\n        return (\n            <Component\n                {...props}\n                role=\"button\"\n                className={cx(\n                    className,\n                    styles.sidenavToggle\n                )}\n                aria-expanded={expanded}\n            >\n                <span className={styles.iconBar} />\n                <span className={styles.iconBar} />\n                <span className={styles.iconBar} />\n                {children}\n            </Component>\n        );\n    }\n}\n\n// For component matching\nToggle.defaultProps.componentType = Toggle;\n\nexport default Toggle;\n"]},"metadata":{},"sourceType":"module"}