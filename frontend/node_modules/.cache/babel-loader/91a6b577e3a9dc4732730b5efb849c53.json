{"ast":null,"code":"/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Detect free variable `global` from Node.js. */\n\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n/** Detect free variable `self`. */\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\n/** Detect free variable `exports`. */\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\n\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\n\n\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n\n  return result;\n}\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\n\n\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n/** Used for built-in method references. */\n\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to detect overreaching core-js shims. */\n\nvar coreJsData = root['__core-js_shared__'];\n/** Used to detect methods masquerading as native. */\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/** Used to resolve the decompiled source of functions. */\n\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar objectToString = objectProto.toString;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n/* Built-in method references that are verified to be native. */\n\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap');\n/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n\nvar nonEnumShadows = !propertyIsEnumerable.call({\n  'valueOf': 1\n}, 'valueOf');\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function (value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\n\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\n\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') && (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\n\n\nvar isArray = Array.isArray;\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\n\n\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\n\nvar isBuffer = nativeIsBuffer || stubFalse;\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\n\nfunction isEmpty(value) {\n  if (isArrayLike(value) && (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' || isBuffer(value) || isArguments(value))) {\n    return !value.length;\n  }\n\n  var tag = getTag(value);\n\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n\n  if (nonEnumShadows || isPrototype(value)) {\n    return !nativeKeys(value).length;\n  }\n\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\n\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\n\n\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\n\n\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\n\n\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEmpty;","map":{"version":3,"sources":["/Users/panyutong/Desktop/学习/INFO90010 IT project/prototype/INFO90010-Prototype/frontend/node_modules/lodash.isempty/index.js"],"names":["MAX_SAFE_INTEGER","argsTag","funcTag","genTag","mapTag","objectTag","promiseTag","setTag","weakMapTag","dataViewTag","reRegExpChar","reIsHostCtor","freeGlobal","global","Object","freeSelf","self","root","Function","freeExports","exports","nodeType","freeModule","module","moduleExports","getValue","object","key","undefined","isHostObject","value","result","toString","e","overArg","func","transform","arg","funcProto","prototype","objectProto","coreJsData","maskSrcKey","uid","exec","keys","IE_PROTO","funcToString","hasOwnProperty","objectToString","reIsNative","RegExp","call","replace","Buffer","propertyIsEnumerable","nativeIsBuffer","isBuffer","nativeKeys","DataView","getNative","Map","Promise","Set","WeakMap","nonEnumShadows","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","baseGetTag","baseIsNative","isObject","isMasked","pattern","isFunction","test","getTag","ArrayBuffer","resolve","Ctor","constructor","ctorString","isPrototype","proto","isArguments","isArrayLikeObject","isArray","Array","isArrayLike","isLength","length","isObjectLike","stubFalse","isEmpty","splice","tag","size","type"],"mappings":"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","sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap');\n\n/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\nvar nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' ||\n        typeof value.splice == 'function' || isBuffer(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (nonEnumShadows || isPrototype(value)) {\n    return !nativeKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEmpty;\n"]},"metadata":{},"sourceType":"script"}