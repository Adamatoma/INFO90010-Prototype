{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _getDistance = _interopRequireDefault(require(\"./getDistance\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar isPointInLine = function isPointInLine(point, lineStart, lineEnd) {\n  return (0, _getDistance.default)(lineStart, point) + (0, _getDistance.default)(point, lineEnd) === (0, _getDistance.default)(lineStart, lineEnd);\n};\n\nvar _default = isPointInLine;\nexports.default = _default;","map":{"version":3,"sources":["/Users/panyutong/Desktop/学习/INFO90010 IT project/prototype/INFO90010-Prototype/frontend/node_modules/geolib/es/isPointInLine.js"],"names":["Object","defineProperty","exports","value","default","_getDistance","_interopRequireDefault","require","obj","__esModule","isPointInLine","point","lineStart","lineEnd","_default"],"mappings":"AAAA;;AAAaA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA8B,YAA9B,EAA2C;AAACC,EAAAA,KAAK,EAAC;AAAP,CAA3C;AAAyDD,OAAO,CAACE,OAAR,GAAgB,KAAK,CAArB;;AAAuB,IAAIC,YAAY,GAACC,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAvC;;AAAkE,SAASD,sBAAT,CAAgCE,GAAhC,EAAoC;AAAC,SAAOA,GAAG,IAAEA,GAAG,CAACC,UAAT,GAAoBD,GAApB,GAAwB;AAACJ,IAAAA,OAAO,EAACI;AAAT,GAA/B;AAA6C;;AAAA,IAAIE,aAAa,GAAC,SAASA,aAAT,CAAuBC,KAAvB,EAA6BC,SAA7B,EAAuCC,OAAvC,EAA+C;AAAC,SAAM,CAAC,GAAER,YAAY,CAACD,OAAhB,EAAyBQ,SAAzB,EAAmCD,KAAnC,IAA0C,CAAC,GAAEN,YAAY,CAACD,OAAhB,EAAyBO,KAAzB,EAA+BE,OAA/B,CAA1C,KAAoF,CAAC,GAAER,YAAY,CAACD,OAAhB,EAAyBQ,SAAzB,EAAmCC,OAAnC,CAA1F;AAAsI,CAAxM;;AAAyM,IAAIC,QAAQ,GAACJ,aAAb;AAA2BR,OAAO,CAACE,OAAR,GAAgBU,QAAhB","sourcesContent":["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _getDistance=_interopRequireDefault(require(\"./getDistance\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var isPointInLine=function isPointInLine(point,lineStart,lineEnd){return(0,_getDistance.default)(lineStart,point)+(0,_getDistance.default)(point,lineEnd)===(0,_getDistance.default)(lineStart,lineEnd)};var _default=isPointInLine;exports.default=_default;"]},"metadata":{},"sourceType":"script"}