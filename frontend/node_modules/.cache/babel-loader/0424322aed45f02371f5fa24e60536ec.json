{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _getLatitude = _interopRequireDefault(require(\"./getLatitude\"));\n\nvar _getLongitude = _interopRequireDefault(require(\"./getLongitude\"));\n\nvar _toRad = _interopRequireDefault(require(\"./toRad\"));\n\nvar _toDeg = _interopRequireDefault(require(\"./toDeg\"));\n\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar computeDestinationPoint = function computeDestinationPoint(start, distance, bearing) {\n  var radius = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 6371000;\n  var lat = (0, _getLatitude.default)(start);\n  var lng = (0, _getLongitude.default)(start);\n  var delta = distance / radius;\n  var theta = (0, _toRad.default)(bearing);\n  var phi1 = (0, _toRad.default)(lat);\n  var lambda1 = (0, _toRad.default)(lng);\n  var phi2 = Math.asin(Math.sin(phi1) * Math.cos(delta) + Math.cos(phi1) * Math.sin(delta) * Math.cos(theta));\n  var lambda2 = lambda1 + Math.atan2(Math.sin(theta) * Math.sin(delta) * Math.cos(phi1), Math.cos(delta) - Math.sin(phi1) * Math.sin(phi2));\n  var longitude = (0, _toDeg.default)(lambda2);\n\n  if (longitude < _constants.MINLON || longitude > _constants.MAXLON) {\n    lambda2 = (lambda2 + 3 * Math.PI) % (2 * Math.PI) - Math.PI;\n    longitude = (0, _toDeg.default)(lambda2);\n  }\n\n  return {\n    latitude: (0, _toDeg.default)(phi2),\n    longitude: longitude\n  };\n};\n\nvar _default = computeDestinationPoint;\nexports.default = _default;","map":{"version":3,"sources":["/Users/panyutong/Desktop/学习/INFO90010 IT project/prototype/INFO90010-Prototype/frontend/node_modules/geolib/es/computeDestinationPoint.js"],"names":["Object","defineProperty","exports","value","default","_getLatitude","_interopRequireDefault","require","_getLongitude","_toRad","_toDeg","_constants","obj","__esModule","computeDestinationPoint","start","distance","bearing","radius","arguments","length","undefined","lat","lng","delta","theta","phi1","lambda1","phi2","Math","asin","sin","cos","lambda2","atan2","longitude","MINLON","MAXLON","PI","latitude","_default"],"mappings":"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","sourcesContent":["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _getLatitude=_interopRequireDefault(require(\"./getLatitude\"));var _getLongitude=_interopRequireDefault(require(\"./getLongitude\"));var _toRad=_interopRequireDefault(require(\"./toRad\"));var _toDeg=_interopRequireDefault(require(\"./toDeg\"));var _constants=require(\"./constants\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var computeDestinationPoint=function computeDestinationPoint(start,distance,bearing){var radius=arguments.length>3&&arguments[3]!==undefined?arguments[3]:6371000;var lat=(0,_getLatitude.default)(start);var lng=(0,_getLongitude.default)(start);var delta=distance/radius;var theta=(0,_toRad.default)(bearing);var phi1=(0,_toRad.default)(lat);var lambda1=(0,_toRad.default)(lng);var phi2=Math.asin(Math.sin(phi1)*Math.cos(delta)+Math.cos(phi1)*Math.sin(delta)*Math.cos(theta));var lambda2=lambda1+Math.atan2(Math.sin(theta)*Math.sin(delta)*Math.cos(phi1),Math.cos(delta)-Math.sin(phi1)*Math.sin(phi2));var longitude=(0,_toDeg.default)(lambda2);if(longitude<_constants.MINLON||longitude>_constants.MAXLON){lambda2=(lambda2+3*Math.PI)%(2*Math.PI)-Math.PI;longitude=(0,_toDeg.default)(lambda2)}return{latitude:(0,_toDeg.default)(phi2),longitude:longitude}};var _default=computeDestinationPoint;exports.default=_default;"]},"metadata":{},"sourceType":"script"}