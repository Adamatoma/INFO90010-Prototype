{"ast":null,"code":"var _jsxFileName = \"/Users/panyutong/Desktop/\\u5B66\\u4E60/INFO90010 IT project/prototype/INFO90010-Prototype/frontend/src/pages/priceComparison.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { withGoogleMap, withScriptjs, useLoadScript, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport Navbar from \"../components/Navbar\";\nimport logo from '../icons/Home.png';\nimport './priceComparison.css';\nimport * as propertyData from \"../components/skateboard-parks.json\"; // import Map from '../components/Map';\n\nimport Background from '../icons/background.png';\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\"; // function Map() {\n//   const [selectedBuilding, setselectedBuilding] = useState(null);\n//   useEffect(() => {\n//     const listener = e => {\n//       if (e.key === \"Escape\") {\n//         setselectedBuilding(null);\n//       }\n//     };\n//     window.addEventListener(\"keydown\", listener);\n//     return () => {\n//       window.removeEventListener(\"keydown\", listener);\n//     };\n//   }, []);\n//   const mapRef = React.useRef();\n//   const onMapLoad = React.useCallback((map) => {\n//     mapRef.current = map;\n//   }, []);\n//   const panTo = React.useCallback(({ lat, lng }) => {\n//     mapRef.current.panTo({ lat, lng });\n//     mapRef.current.setZoom(14);\n//   }, []);\n//   return (\n//     <div>\n//       <Search panTo={panTo} />\n//       <GoogleMap\n//         defaultZoom={16}\n//         defaultCenter={{ lat: -37.807695, lng: 144.961434 }}\n//       >\n//         {propertyData.Buildings.map(building => (\n//           <Marker\n//             key={building.Id}\n//             position={{\n//               lat: building.geometry.coordinates[1],\n//               lng: building.geometry.coordinates[0]\n//             }}\n//             onClick={() => {\n//               setselectedBuilding(building);\n//             }}\n//           />\n//         ))}\n//         {selectedBuilding && (\n//           <InfoWindow\n//             onCloseClick={() => {\n//               setselectedBuilding(null);\n//             }}\n//             position={{\n//               lat: selectedBuilding.geometry.coordinates[1],\n//               lng: selectedBuilding.geometry.coordinates[0]\n//             }}\n//           >\n//             <div>\n//               {selectedBuilding.Properties\n//                 .sort((a, b) => a.Origin[0].Price - b.Origin[0].Price)\n//                 .map((property, index) => {\n//                   return (\n//                     <div key={index} className=\"card\">\n//                       <div className=\"content-image\">\n//                         <img className=\"image\" style={imageStyle} src={property.Src} />\n//                       </div>\n//                       <div className=\"content-left\">\n//                         <p>Agent: {property.Agent}</p>\n//                         <p>Type:{property.Bedroom} Bedroom {property.Bathroom} Bathroom {property.Parking} Parking area</p>\n//                         <p>Location: {property.Location}</p>\n//                         <p>Distance:</p>\n//                       </div>\n//                       <div className=\"content-right\">\n//                         {property.Origin.map((Source, index) => {\n//                           return (\n//                             <div key={index} className=\"content-right-main\">\n//                               <div className=\"content-right-name\">\n//                                 <a href={Source.Url}>{Source.Name}</a>\n//                               </div>\n//                               <div className=\"content-right-price\">\n//                                 <p>$ {Source.Price}</p>\n//                               </div>\n//                             </div>\n//                           )\n//                         })\n//                         }\n//                       </div>\n//                     </div>\n//                   )\n//                 })\n//               }\n//             </div>\n//           </InfoWindow>\n//         )}\n//       </GoogleMap>\n//     </div>\n//   );\n// }\n// function Search({ panTo }) {\n//   const {\n//     ready,\n//     value,\n//     suggestions: { status, data },\n//     setValue,\n//     clearSuggestions,\n//   } = usePlacesAutocomplete({\n//     requestOptions: {\n//       location: { lat: () => 43.6532, lng: () => -79.3832 },\n//       radius: 100 * 1000,\n//     },\n//   });\n//   // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\n//   const handleInput = (e) => {\n//     setValue(e.target.value);\n//   };\n//   const handleSelect = async (address) => {\n//     setValue(address, false);\n//     clearSuggestions();\n//     try {\n//       const results = await getGeocode({ address });\n//       const { lat, lng } = await getLatLng(results[0]);\n//       // console.log(result);\n//       // panTo({ lat, lng });\n//     } catch (error) {\n//       console.log(\"ðŸ˜± Error: \", error);\n//     }\n//   };\n//   return (\n//     <div className=\"search\">\n//       <Combobox onSelect={handleSelect}>\n//         <ComboboxInput\n//           value={value}\n//           onChange={handleInput}\n//           disabled={!ready}\n//           placeholder=\"Search your location\"\n//         />\n//         <ComboboxPopover>\n//           <ComboboxList>\n//             {status === \"OK\" &&\n//               data.map(({ id, description }) => (\n//                 <ComboboxOption key={id} value={description} />\n//               ))}\n//           </ComboboxList>\n//         </ComboboxPopover>\n//       </Combobox>\n//     </div>\n//   );\n// }\n\nvar backgroundStyle = {\n  backgroundSize: 'cover',\n  height: \"300px\",\n  backgroundRepeat: 'no-repeat',\n  opacity: '0.3',\n  backgroundImage: `url(${Background})`\n};\nvar imageStyle = {\n  width: \"200px\",\n  height: \"200px\",\n  backgroundRepeat: 'no-repeat'\n};\n\nclass PriceComparison extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pc: []\n    };\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:3000/priceComparison\").then(res => res.json()).then(res => this.setState({\n      pc: res.data\n    })).catch(err => console.error(err));\n  }\n\n  componentDidMount() {\n    this.callAPI();\n  }\n\n  render() {\n    // var result = this.state.pc;\n    // var numOfResult = result.length;\n    // console.log(result);\n    const MapWrapped = withScriptjs(withGoogleMap(Map));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"logo\",\n      src: logo,\n      alt: \"Logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }\n    }, \"AusNewRenters\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-box\",\n      style: backgroundStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"906px\",\n        height: \"458px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MapWrapped, {\n      googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}&language=en-AU`,\n      loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: `100%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 31\n        }\n      }),\n      containerElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: `100%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 33\n        }\n      }),\n      mapElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: `100%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default PriceComparison;","map":{"version":3,"sources":["/Users/panyutong/Desktop/å­¦ä¹ /INFO90010 IT project/prototype/INFO90010-Prototype/frontend/src/pages/priceComparison.js"],"names":["React","useState","useEffect","withGoogleMap","withScriptjs","useLoadScript","GoogleMap","Marker","InfoWindow","Navbar","logo","propertyData","Background","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","backgroundStyle","backgroundSize","height","backgroundRepeat","opacity","backgroundImage","imageStyle","width","PriceComparison","Component","constructor","props","state","pc","callAPI","fetch","then","res","json","setState","data","catch","err","console","error","componentDidMount","render","MapWrapped","Map","process","env","REACT_APP_GOOGLE_KEY"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  useLoadScript,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\";\nimport Navbar from \"../components/Navbar\";\nimport logo from '../icons/Home.png';\nimport './priceComparison.css';\nimport * as propertyData from \"../components/skateboard-parks.json\";\n// import Map from '../components/Map';\nimport Background from '../icons/background.png';\nimport usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng,\n} from \"use-places-autocomplete\";\nimport {\n  Combobox,\n  ComboboxInput,\n  ComboboxPopover,\n  ComboboxList,\n  ComboboxOption,\n} from \"@reach/combobox\";\n// function Map() {\n\n//   const [selectedBuilding, setselectedBuilding] = useState(null);\n//   useEffect(() => {\n//     const listener = e => {\n//       if (e.key === \"Escape\") {\n//         setselectedBuilding(null);\n//       }\n//     };\n//     window.addEventListener(\"keydown\", listener);\n\n//     return () => {\n//       window.removeEventListener(\"keydown\", listener);\n//     };\n//   }, []);\n\n//   const mapRef = React.useRef();\n//   const onMapLoad = React.useCallback((map) => {\n//     mapRef.current = map;\n//   }, []);\n\n//   const panTo = React.useCallback(({ lat, lng }) => {\n//     mapRef.current.panTo({ lat, lng });\n//     mapRef.current.setZoom(14);\n//   }, []);\n\n//   return (\n//     <div>\n//       <Search panTo={panTo} />\n//       <GoogleMap\n//         defaultZoom={16}\n//         defaultCenter={{ lat: -37.807695, lng: 144.961434 }}\n//       >\n//         {propertyData.Buildings.map(building => (\n//           <Marker\n//             key={building.Id}\n//             position={{\n//               lat: building.geometry.coordinates[1],\n//               lng: building.geometry.coordinates[0]\n//             }}\n//             onClick={() => {\n//               setselectedBuilding(building);\n//             }}\n//           />\n//         ))}\n\n//         {selectedBuilding && (\n//           <InfoWindow\n//             onCloseClick={() => {\n//               setselectedBuilding(null);\n//             }}\n//             position={{\n//               lat: selectedBuilding.geometry.coordinates[1],\n//               lng: selectedBuilding.geometry.coordinates[0]\n//             }}\n//           >\n//             <div>\n//               {selectedBuilding.Properties\n//                 .sort((a, b) => a.Origin[0].Price - b.Origin[0].Price)\n//                 .map((property, index) => {\n//                   return (\n//                     <div key={index} className=\"card\">\n//                       <div className=\"content-image\">\n//                         <img className=\"image\" style={imageStyle} src={property.Src} />\n//                       </div>\n//                       <div className=\"content-left\">\n//                         <p>Agent: {property.Agent}</p>\n//                         <p>Type:{property.Bedroom} Bedroom {property.Bathroom} Bathroom {property.Parking} Parking area</p>\n//                         <p>Location: {property.Location}</p>\n//                         <p>Distance:</p>\n//                       </div>\n//                       <div className=\"content-right\">\n//                         {property.Origin.map((Source, index) => {\n//                           return (\n//                             <div key={index} className=\"content-right-main\">\n//                               <div className=\"content-right-name\">\n//                                 <a href={Source.Url}>{Source.Name}</a>\n//                               </div>\n//                               <div className=\"content-right-price\">\n//                                 <p>$ {Source.Price}</p>\n//                               </div>\n//                             </div>\n//                           )\n//                         })\n//                         }\n//                       </div>\n//                     </div>\n//                   )\n//                 })\n//               }\n//             </div>\n\n//           </InfoWindow>\n//         )}\n//       </GoogleMap>\n//     </div>\n//   );\n// }\n\n// function Search({ panTo }) {\n//   const {\n//     ready,\n//     value,\n//     suggestions: { status, data },\n//     setValue,\n//     clearSuggestions,\n//   } = usePlacesAutocomplete({\n//     requestOptions: {\n//       location: { lat: () => 43.6532, lng: () => -79.3832 },\n//       radius: 100 * 1000,\n//     },\n//   });\n\n//   // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\n\n//   const handleInput = (e) => {\n//     setValue(e.target.value);\n//   };\n\n//   const handleSelect = async (address) => {\n//     setValue(address, false);\n//     clearSuggestions();\n\n//     try {\n//       const results = await getGeocode({ address });\n//       const { lat, lng } = await getLatLng(results[0]);\n//       // console.log(result);\n//       // panTo({ lat, lng });\n//     } catch (error) {\n//       console.log(\"ðŸ˜± Error: \", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"search\">\n//       <Combobox onSelect={handleSelect}>\n//         <ComboboxInput\n//           value={value}\n//           onChange={handleInput}\n//           disabled={!ready}\n//           placeholder=\"Search your location\"\n//         />\n//         <ComboboxPopover>\n//           <ComboboxList>\n//             {status === \"OK\" &&\n//               data.map(({ id, description }) => (\n//                 <ComboboxOption key={id} value={description} />\n//               ))}\n//           </ComboboxList>\n//         </ComboboxPopover>\n//       </Combobox>\n//     </div>\n//   );\n// }\n\n\nvar backgroundStyle = {\n  backgroundSize: 'cover',\n  height: \"300px\",\n  backgroundRepeat: 'no-repeat',\n  opacity: '0.3',\n  backgroundImage: `url(${Background})`\n\n};\n\nvar imageStyle = {\n  width: \"200px\",\n  height: \"200px\",\n  backgroundRepeat: 'no-repeat'\n};\n\nclass PriceComparison extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pc: []\n    }\n  }\n\n\n  callAPI() {\n    fetch(\"http://localhost:3000/priceComparison\")\n      .then(res => res.json())\n      .then(res => this.setState({ pc: res.data }))\n      .catch(err => console.error(err))\n  }\n\n  componentDidMount() {\n    this.callAPI();\n\n  }\n\n  render() {\n    // var result = this.state.pc;\n    // var numOfResult = result.length;\n    // console.log(result);\n    const MapWrapped = withScriptjs(withGoogleMap(Map));\n\n    return (\n      <>\n        <div className=\"heading\">\n          <img className=\"logo\" src={logo} alt=\"Logo\" />\n          <h4 className=\"name\">AusNewRenters</h4>\n        </div>\n\n        <div className=\"sidebar\">\n          <Navbar />\n        </div>\n        <div className=\"text-box\" style={backgroundStyle}>\n        </div>\n        <div className=\"map-container\">\n          <div style={{ width: \"906px\", height: \"458px\" }}>\n            <MapWrapped\n              googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${\n                process.env.REACT_APP_GOOGLE_KEY\n                }&language=en-AU`}\n              loadingElement={<div style={{ height: `100%` }} />}\n              containerElement={<div style={{ height: `100%` }} />}\n              mapElement={<div style={{ height: `100%` }} />}\n            />\n          </div>\n        </div>\n      </>\n\n    );\n  }\n}\n\n\n\n\n\nexport default PriceComparison;"]},"metadata":{},"sourceType":"module"}