{"ast":null,"code":"var _jsxFileName = \"/Users/panyutong/Desktop/\\u5B66\\u4E60/INFO90010 IT project/prototype/INFO90010-Prototype/frontend/src/components/NavItem.jsx\";\n\n/* eslint jsx-a11y/click-events-have-key-events: 0 */\nimport chainedFunction from 'chained-function';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { PureComponent, cloneElement } from 'react';\nimport NavIcon from './NavIcon';\nimport NavText from './NavText';\nimport findComponent from './find-component';\nimport match from './match-component';\nimport styles from './index.styl';\n\nconst noop = () => {};\n\nclass NavItem extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.findNavIcon = findComponent(NavIcon);\n    this.findNavText = findComponent(NavText);\n    this.isNavItem = match(NavItem);\n    this.isNavIcon = match(NavIcon);\n    this.isNavText = match(NavText);\n\n    this.handleSelect = event => {\n      const {\n        disabled,\n        onSelect,\n        eventKey\n      } = this.props;\n\n      if (disabled) {\n        event.preventDefault();\n        return;\n      }\n\n      if (onSelect) {\n        onSelect(eventKey, event);\n      }\n    };\n  }\n\n  render() {\n    const {\n      componentType,\n      // eslint-disable-line\n      componentClass: Component,\n      active,\n      disabled,\n      expanded,\n      eventKey,\n      // eslint-disable-line\n      onClick,\n      onSelect,\n      // Nav props\n      selected,\n      // Sub navigation item\n      subnav,\n      // Override className and style\n      navitemClassName,\n      navitemStyle,\n      subnavClassName,\n      subnavStyle,\n      // Default props\n      className,\n      style,\n      children,\n      ...props\n    } = this.props;\n    const navIcon = this.findNavIcon(children);\n    const navText = this.findNavText(children);\n    const {\n      componentType: navIconComponentType,\n      // eslint-disable-line\n      navIconClassName,\n      ...navIconProps\n    } = navIcon ? { ...navIcon.props\n    } : {};\n    const {\n      componentType: navTextComponentType,\n      // eslint-disable-line\n      navTextClassName,\n      ...navTextProps\n    } = navText ? { ...navText.props\n    } : {};\n\n    if (subnav) {\n      const isNavItemSelected = active || !!selected && selected === this.props.eventKey;\n      return /*#__PURE__*/React.createElement(Component, {\n        role: \"presentation\",\n        className: cx(className, styles.sidenavSubnavitem, {\n          [styles.selected]: isNavItemSelected,\n          [styles.disabled]: disabled\n        }),\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n        className: cx(navitemClassName, styles.navitem),\n        style: navitemStyle,\n        disabled: disabled,\n        role: \"menuitem\",\n        tabIndex: \"-1\",\n        onClick: chainedFunction(onClick, this.handleSelect),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }), navIcon && /*#__PURE__*/React.createElement(\"div\", Object.assign({}, navIconProps, {\n        className: cx(navIconClassName, styles.navicon),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      })), navText && /*#__PURE__*/React.createElement(\"div\", Object.assign({}, navTextProps, {\n        className: cx(navTextClassName, styles.navtext),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }\n      }))));\n    }\n\n    const activeNavItems = [];\n    const navItems = React.Children.toArray(children).filter(child => {\n      return React.isValidElement(child) && this.isNavItem(child);\n    }).map(child => {\n      if (child.props.active || !!selected && selected === child.props.eventKey) {\n        activeNavItems.push(child);\n      }\n\n      return cloneElement(child, {\n        subnav: true,\n        selected,\n        onSelect: chainedFunction(child.props.onSelect, onSelect)\n      });\n    });\n    const others = React.Children.toArray(children).filter(child => {\n      if (React.isValidElement(child) && (this.isNavIcon(child) || this.isNavText(child) || this.isNavItem(child))) {\n        return false;\n      }\n\n      return true;\n    });\n    const isNavItemSelected = active || !!selected && selected === this.props.eventKey || activeNavItems.length > 0;\n    const isNavItemExpandable = navItems.length > 0;\n    const isNavItemExpanded = isNavItemExpandable && expanded;\n    const isNavItemHighlighted = isNavItemExpanded || isNavItemSelected;\n    return /*#__PURE__*/React.createElement(Component, {\n      role: \"presentation\",\n      className: cx(className, styles.sidenavNavitem, {\n        [styles.selected]: isNavItemSelected,\n        [styles.highlighted]: isNavItemHighlighted,\n        [styles.expandable]: isNavItemExpandable,\n        [styles.expanded]: isNavItemExpanded,\n        [styles.disabled]: disabled\n      }),\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n      className: cx(navitemClassName, styles.navitem),\n      style: navitemStyle,\n      disabled: disabled,\n      role: \"menuitem\",\n      tabIndex: \"-1\",\n      onClick: chainedFunction(onClick, navItems.length === 0 ? this.handleSelect : noop),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }), navIcon && /*#__PURE__*/React.createElement(\"div\", Object.assign({}, navIconProps, {\n      className: cx(navIconClassName, styles.navicon),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    })), navText && /*#__PURE__*/React.createElement(\"div\", Object.assign({}, navTextProps, {\n      className: cx(navTextClassName, styles.navtext),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    })), others), navItems.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      role: \"menu\",\n      className: cx(subnavClassName, styles.sidenavSubnav),\n      style: subnavStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Component, {\n      role: \"heading\",\n      className: cx(styles.sidenavSubnavitem, {\n        [styles.highlighted]: active,\n        [styles.disabled]: disabled\n      }),\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 25\n      }\n    }, navText && navText.props ? navText.props.children : null), navItems));\n  }\n\n} // For component matching\n\n\nNavItem.propTypes = {\n  componentType: PropTypes.any,\n  // A custom element for this component.\n  componentClass: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  // Highlight the navigation item as active.\n  active: PropTypes.bool,\n  // Disable the navigation item, making it unselectable.\n  disabled: PropTypes.bool,\n  // Whether the navigation item is expanded or collapsed.\n  expanded: PropTypes.bool,\n  // Value passed to the `onSelect` handler, useful for identifying the selected navigation item.\n  eventKey: PropTypes.any,\n  // Callback fired when the navigation item is clicked.\n  onClick: PropTypes.func,\n  // Callback fired when a navigation item is selected.\n  onSelect: PropTypes.func,\n  //\n  // Nav props\n  //\n  // The selected navigation item.\n  selected: PropTypes.any,\n  //\n  // Sub navigation item (internal use only)\n  //\n  // Whether it is a sub navigation item.\n  subnav: PropTypes.bool,\n  navitemClassName: PropTypes.string,\n  navitemStyle: PropTypes.object,\n  subnavClassName: PropTypes.string,\n  subnavStyle: PropTypes.object\n};\nNavItem.defaultProps = {\n  componentClass: 'div',\n  active: false,\n  disabled: false,\n  expanded: false\n};\nNavItem.defaultProps.componentType = NavItem;\nexport default NavItem;","map":{"version":3,"sources":["/Users/panyutong/Desktop/学习/INFO90010 IT project/prototype/INFO90010-Prototype/frontend/src/components/NavItem.jsx"],"names":["chainedFunction","cx","PropTypes","React","PureComponent","cloneElement","NavIcon","NavText","findComponent","match","styles","noop","NavItem","findNavIcon","findNavText","isNavItem","isNavIcon","isNavText","handleSelect","event","disabled","onSelect","eventKey","props","preventDefault","render","componentType","componentClass","Component","active","expanded","onClick","selected","subnav","navitemClassName","navitemStyle","subnavClassName","subnavStyle","className","style","children","navIcon","navText","navIconComponentType","navIconClassName","navIconProps","navTextComponentType","navTextClassName","navTextProps","isNavItemSelected","sidenavSubnavitem","navitem","navicon","navtext","activeNavItems","navItems","Children","toArray","filter","child","isValidElement","map","push","others","length","isNavItemExpandable","isNavItemExpanded","isNavItemHighlighted","sidenavNavitem","highlighted","expandable","sidenavSubnav","propTypes","any","oneOfType","string","func","bool","object","defaultProps"],"mappings":"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","sourcesContent":["/* eslint jsx-a11y/click-events-have-key-events: 0 */\nimport chainedFunction from 'chained-function';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { PureComponent, cloneElement } from 'react';\nimport NavIcon from './NavIcon';\nimport NavText from './NavText';\nimport findComponent from './find-component';\nimport match from './match-component';\nimport styles from './index.styl';\n\nconst noop = () => {};\n\nclass NavItem extends PureComponent {\n    static propTypes = {\n        componentType: PropTypes.any,\n\n        // A custom element for this component.\n        componentClass: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.func\n        ]),\n\n        // Highlight the navigation item as active.\n        active: PropTypes.bool,\n\n        // Disable the navigation item, making it unselectable.\n        disabled: PropTypes.bool,\n\n        // Whether the navigation item is expanded or collapsed.\n        expanded: PropTypes.bool,\n\n        // Value passed to the `onSelect` handler, useful for identifying the selected navigation item.\n        eventKey: PropTypes.any,\n\n        // Callback fired when the navigation item is clicked.\n        onClick: PropTypes.func,\n\n        // Callback fired when a navigation item is selected.\n        onSelect: PropTypes.func,\n\n        //\n        // Nav props\n        //\n\n        // The selected navigation item.\n        selected: PropTypes.any,\n\n        //\n        // Sub navigation item (internal use only)\n        //\n\n        // Whether it is a sub navigation item.\n        subnav: PropTypes.bool,\n\n        navitemClassName: PropTypes.string,\n        navitemStyle: PropTypes.object,\n        subnavClassName: PropTypes.string,\n        subnavStyle: PropTypes.object\n    };\n    static defaultProps = {\n        componentClass: 'div',\n        active: false,\n        disabled: false,\n        expanded: false\n    };\n\n    findNavIcon = findComponent(NavIcon);\n    findNavText = findComponent(NavText);\n    isNavItem = match(NavItem);\n    isNavIcon = match(NavIcon);\n    isNavText = match(NavText);\n\n    handleSelect = (event) => {\n        const {\n            disabled, onSelect, eventKey\n        } = this.props;\n\n        if (disabled) {\n            event.preventDefault();\n            return;\n        }\n\n        if (onSelect) {\n            onSelect(eventKey, event);\n        }\n    };\n\n    render() {\n        const {\n            componentType, // eslint-disable-line\n            componentClass: Component,\n            active,\n            disabled,\n            expanded,\n            eventKey, // eslint-disable-line\n            onClick,\n            onSelect,\n\n            // Nav props\n            selected,\n\n            // Sub navigation item\n            subnav,\n\n            // Override className and style\n            navitemClassName,\n            navitemStyle,\n            subnavClassName,\n            subnavStyle,\n\n            // Default props\n            className,\n            style,\n            children,\n            ...props\n        } = this.props;\n\n        const navIcon = this.findNavIcon(children);\n        const navText = this.findNavText(children);\n        const {\n            componentType: navIconComponentType, // eslint-disable-line\n            navIconClassName,\n            ...navIconProps\n        } = navIcon ? { ...navIcon.props } : {};\n        const {\n            componentType: navTextComponentType, // eslint-disable-line\n            navTextClassName,\n            ...navTextProps\n        } = navText ? { ...navText.props } : {};\n\n        if (subnav) {\n            const isNavItemSelected = active || (!!selected && selected === this.props.eventKey);\n\n            return (\n                <Component\n                    role=\"presentation\"\n                    className={cx(className, styles.sidenavSubnavitem, {\n                        [styles.selected]: isNavItemSelected,\n                        [styles.disabled]: disabled\n                    })}\n                    style={style}\n                >\n                    <div\n                        {...props}\n                        className={cx(navitemClassName, styles.navitem)}\n                        style={navitemStyle}\n                        disabled={disabled}\n                        role=\"menuitem\"\n                        tabIndex=\"-1\"\n                        onClick={chainedFunction(\n                            onClick,\n                            this.handleSelect\n                        )}\n                    >\n                        {navIcon &&\n                        <div {...navIconProps} className={cx(navIconClassName, styles.navicon)} />\n                        }\n                        {navText &&\n                        <div {...navTextProps} className={cx(navTextClassName, styles.navtext)} />\n                        }\n                    </div>\n                </Component>\n            );\n        }\n\n        const activeNavItems = [];\n        const navItems = React.Children.toArray(children)\n            .filter(child => {\n                return React.isValidElement(child) && this.isNavItem(child);\n            })\n            .map(child => {\n                if (child.props.active || (!!selected && selected === child.props.eventKey)) {\n                    activeNavItems.push(child);\n                }\n\n                return cloneElement(child, {\n                    subnav: true,\n                    selected,\n                    onSelect: chainedFunction(\n                        child.props.onSelect,\n                        onSelect\n                    )\n                });\n            });\n        const others = React.Children.toArray(children)\n            .filter(child => {\n                if (React.isValidElement(child) && (this.isNavIcon(child) || this.isNavText(child) || this.isNavItem(child))) {\n                    return false;\n                }\n                return true;\n            });\n\n        const isNavItemSelected = active || (!!selected && selected === this.props.eventKey) || (activeNavItems.length > 0);\n        const isNavItemExpandable = (navItems.length > 0);\n        const isNavItemExpanded = isNavItemExpandable && expanded;\n        const isNavItemHighlighted = isNavItemExpanded || isNavItemSelected;\n\n        return (\n            <Component\n                role=\"presentation\"\n                className={cx(className, styles.sidenavNavitem, {\n                    [styles.selected]: isNavItemSelected,\n                    [styles.highlighted]: isNavItemHighlighted,\n                    [styles.expandable]: isNavItemExpandable,\n                    [styles.expanded]: isNavItemExpanded,\n                    [styles.disabled]: disabled\n                })}\n                style={style}\n            >\n                <div\n                    {...props}\n                    className={cx(navitemClassName, styles.navitem)}\n                    style={navitemStyle}\n                    disabled={disabled}\n                    role=\"menuitem\"\n                    tabIndex=\"-1\"\n                    onClick={chainedFunction(\n                        onClick,\n                        (navItems.length === 0) ? this.handleSelect : noop\n                    )}\n                >\n                    {navIcon &&\n                    <div {...navIconProps} className={cx(navIconClassName, styles.navicon)} />\n                    }\n                    {navText &&\n                    <div {...navTextProps} className={cx(navTextClassName, styles.navtext)} />\n                    }\n                    {others}\n                </div>\n                {(navItems.length > 0) &&\n                    <div\n                        role=\"menu\"\n                        className={cx(subnavClassName, styles.sidenavSubnav)}\n                        style={subnavStyle}\n                    >\n                        <Component\n                            role=\"heading\"\n                            className={cx(styles.sidenavSubnavitem, {\n                                [styles.highlighted]: active,\n                                [styles.disabled]: disabled\n                            })}\n                            style={style}\n                        >\n                            {navText && navText.props ? navText.props.children : null}\n                        </Component>\n                        {navItems}\n                    </div>\n                }\n            </Component>\n        );\n    }\n}\n\n// For component matching\nNavItem.defaultProps.componentType = NavItem;\n\nexport default NavItem;\n"]},"metadata":{},"sourceType":"module"}