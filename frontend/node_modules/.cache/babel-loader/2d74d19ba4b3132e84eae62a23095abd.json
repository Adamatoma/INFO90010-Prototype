{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _getLatitude = _interopRequireDefault(require(\"./getLatitude\"));\n\nvar _getLongitude = _interopRequireDefault(require(\"./getLongitude\"));\n\nvar _toRad = _interopRequireDefault(require(\"./toRad\"));\n\nvar _toDeg = _interopRequireDefault(require(\"./toDeg\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar getRhumbLineBearing = function getRhumbLineBearing(origin, dest) {\n  var diffLon = (0, _toRad.default)((0, _getLongitude.default)(dest)) - (0, _toRad.default)((0, _getLongitude.default)(origin));\n  var diffPhi = Math.log(Math.tan((0, _toRad.default)((0, _getLatitude.default)(dest)) / 2 + Math.PI / 4) / Math.tan((0, _toRad.default)((0, _getLatitude.default)(origin)) / 2 + Math.PI / 4));\n\n  if (Math.abs(diffLon) > Math.PI) {\n    if (diffLon > 0) {\n      diffLon = (Math.PI * 2 - diffLon) * -1;\n    } else {\n      diffLon = Math.PI * 2 + diffLon;\n    }\n  }\n\n  return ((0, _toDeg.default)(Math.atan2(diffLon, diffPhi)) + 360) % 360;\n};\n\nvar _default = getRhumbLineBearing;\nexports.default = _default;","map":{"version":3,"sources":["/Users/panyutong/Desktop/学习/INFO90010 IT project/prototype/INFO90010-Prototype/frontend/node_modules/geolib/es/getRhumbLineBearing.js"],"names":["Object","defineProperty","exports","value","default","_getLatitude","_interopRequireDefault","require","_getLongitude","_toRad","_toDeg","obj","__esModule","getRhumbLineBearing","origin","dest","diffLon","diffPhi","Math","log","tan","PI","abs","atan2","_default"],"mappings":"AAAA;;AAAaA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA8B,YAA9B,EAA2C;AAACC,EAAAA,KAAK,EAAC;AAAP,CAA3C;AAAyDD,OAAO,CAACE,OAAR,GAAgB,KAAK,CAArB;;AAAuB,IAAIC,YAAY,GAACC,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAvC;;AAAkE,IAAIC,aAAa,GAACF,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAAxC;;AAAoE,IAAIE,MAAM,GAACH,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAAjC;;AAAsD,IAAIG,MAAM,GAACJ,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAAjC;;AAAsD,SAASD,sBAAT,CAAgCK,GAAhC,EAAoC;AAAC,SAAOA,GAAG,IAAEA,GAAG,CAACC,UAAT,GAAoBD,GAApB,GAAwB;AAACP,IAAAA,OAAO,EAACO;AAAT,GAA/B;AAA6C;;AAAA,IAAIE,mBAAmB,GAAC,SAASA,mBAAT,CAA6BC,MAA7B,EAAoCC,IAApC,EAAyC;AAAC,MAAIC,OAAO,GAAC,CAAC,GAAEP,MAAM,CAACL,OAAV,EAAmB,CAAC,GAAEI,aAAa,CAACJ,OAAjB,EAA0BW,IAA1B,CAAnB,IAAoD,CAAC,GAAEN,MAAM,CAACL,OAAV,EAAmB,CAAC,GAAEI,aAAa,CAACJ,OAAjB,EAA0BU,MAA1B,CAAnB,CAAhE;AAAsH,MAAIG,OAAO,GAACC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAAS,CAAC,GAAEX,MAAM,CAACL,OAAV,EAAmB,CAAC,GAAEC,YAAY,CAACD,OAAhB,EAAyBW,IAAzB,CAAnB,IAAmD,CAAnD,GAAqDG,IAAI,CAACG,EAAL,GAAQ,CAAtE,IAAyEH,IAAI,CAACE,GAAL,CAAS,CAAC,GAAEX,MAAM,CAACL,OAAV,EAAmB,CAAC,GAAEC,YAAY,CAACD,OAAhB,EAAyBU,MAAzB,CAAnB,IAAqD,CAArD,GAAuDI,IAAI,CAACG,EAAL,GAAQ,CAAxE,CAAlF,CAAZ;;AAA0K,MAAGH,IAAI,CAACI,GAAL,CAASN,OAAT,IAAkBE,IAAI,CAACG,EAA1B,EAA6B;AAAC,QAAGL,OAAO,GAAC,CAAX,EAAa;AAACA,MAAAA,OAAO,GAAC,CAACE,IAAI,CAACG,EAAL,GAAQ,CAAR,GAAUL,OAAX,IAAoB,CAAC,CAA7B;AAA+B,KAA7C,MAAiD;AAACA,MAAAA,OAAO,GAACE,IAAI,CAACG,EAAL,GAAQ,CAAR,GAAUL,OAAlB;AAA0B;AAAC;;AAAA,SAAM,CAAC,CAAC,GAAEN,MAAM,CAACN,OAAV,EAAmBc,IAAI,CAACK,KAAL,CAAWP,OAAX,EAAmBC,OAAnB,CAAnB,IAAgD,GAAjD,IAAsD,GAA5D;AAAgE,CAA7gB;;AAA8gB,IAAIO,QAAQ,GAACX,mBAAb;AAAiCX,OAAO,CAACE,OAAR,GAAgBoB,QAAhB","sourcesContent":["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _getLatitude=_interopRequireDefault(require(\"./getLatitude\"));var _getLongitude=_interopRequireDefault(require(\"./getLongitude\"));var _toRad=_interopRequireDefault(require(\"./toRad\"));var _toDeg=_interopRequireDefault(require(\"./toDeg\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var getRhumbLineBearing=function getRhumbLineBearing(origin,dest){var diffLon=(0,_toRad.default)((0,_getLongitude.default)(dest))-(0,_toRad.default)((0,_getLongitude.default)(origin));var diffPhi=Math.log(Math.tan((0,_toRad.default)((0,_getLatitude.default)(dest))/2+Math.PI/4)/Math.tan((0,_toRad.default)((0,_getLatitude.default)(origin))/2+Math.PI/4));if(Math.abs(diffLon)>Math.PI){if(diffLon>0){diffLon=(Math.PI*2-diffLon)*-1}else{diffLon=Math.PI*2+diffLon}}return((0,_toDeg.default)(Math.atan2(diffLon,diffPhi))+360)%360};var _default=getRhumbLineBearing;exports.default=_default;"]},"metadata":{},"sourceType":"script"}