{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toRad = _interopRequireDefault(require(\"./toRad\"));\n\nvar _getLatitude = _interopRequireDefault(require(\"./getLatitude\"));\n\nvar _getLongitude = _interopRequireDefault(require(\"./getLongitude\"));\n\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar getAreaOfPolygon = function getAreaOfPolygon(points) {\n  var area = 0;\n\n  if (points.length > 2) {\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n\n    for (var i = 0; i < points.length; i++) {\n      if (i === points.length - 2) {\n        lowerIndex = points.length - 2;\n        middleIndex = points.length - 1;\n        upperIndex = 0;\n      } else if (i === points.length - 1) {\n        lowerIndex = points.length - 1;\n        middleIndex = 0;\n        upperIndex = 1;\n      } else {\n        lowerIndex = i;\n        middleIndex = i + 1;\n        upperIndex = i + 2;\n      }\n\n      var p1lon = (0, _getLongitude.default)(points[lowerIndex]);\n      var p2lat = (0, _getLatitude.default)(points[middleIndex]);\n      var p3lon = (0, _getLongitude.default)(points[upperIndex]);\n      area += ((0, _toRad.default)(p3lon) - (0, _toRad.default)(p1lon)) * Math.sin((0, _toRad.default)(p2lat));\n    }\n\n    area = area * _constants.earthRadius * _constants.earthRadius / 2;\n  }\n\n  return Math.abs(area);\n};\n\nvar _default = getAreaOfPolygon;\nexports.default = _default;","map":{"version":3,"sources":["/Users/panyutong/Desktop/学习/INFO90010 IT project/prototype/INFO90010-Prototype/frontend/node_modules/geolib/es/getAreaOfPolygon.js"],"names":["Object","defineProperty","exports","value","default","_toRad","_interopRequireDefault","require","_getLatitude","_getLongitude","_constants","obj","__esModule","getAreaOfPolygon","points","area","length","lowerIndex","middleIndex","upperIndex","i","p1lon","p2lat","p3lon","Math","sin","earthRadius","abs","_default"],"mappings":"AAAA;;AAAaA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA8B,YAA9B,EAA2C;AAACC,EAAAA,KAAK,EAAC;AAAP,CAA3C;AAAyDD,OAAO,CAACE,OAAR,GAAgB,KAAK,CAArB;;AAAuB,IAAIC,MAAM,GAACC,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAAjC;;AAAsD,IAAIC,YAAY,GAACF,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAvC;;AAAkE,IAAIE,aAAa,GAACH,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAAxC;;AAAoE,IAAIG,UAAU,GAACH,OAAO,CAAC,aAAD,CAAtB;;AAAsC,SAASD,sBAAT,CAAgCK,GAAhC,EAAoC;AAAC,SAAOA,GAAG,IAAEA,GAAG,CAACC,UAAT,GAAoBD,GAApB,GAAwB;AAACP,IAAAA,OAAO,EAACO;AAAT,GAA/B;AAA6C;;AAAA,IAAIE,gBAAgB,GAAC,SAASA,gBAAT,CAA0BC,MAA1B,EAAiC;AAAC,MAAIC,IAAI,GAAC,CAAT;;AAAW,MAAGD,MAAM,CAACE,MAAP,GAAc,CAAjB,EAAmB;AAAC,QAAIC,UAAJ;AAAe,QAAIC,WAAJ;AAAgB,QAAIC,UAAJ;;AAAe,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,MAAM,CAACE,MAArB,EAA4BI,CAAC,EAA7B,EAAgC;AAAC,UAAGA,CAAC,KAAGN,MAAM,CAACE,MAAP,GAAc,CAArB,EAAuB;AAACC,QAAAA,UAAU,GAACH,MAAM,CAACE,MAAP,GAAc,CAAzB;AAA2BE,QAAAA,WAAW,GAACJ,MAAM,CAACE,MAAP,GAAc,CAA1B;AAA4BG,QAAAA,UAAU,GAAC,CAAX;AAAa,OAA5F,MAAiG,IAAGC,CAAC,KAAGN,MAAM,CAACE,MAAP,GAAc,CAArB,EAAuB;AAACC,QAAAA,UAAU,GAACH,MAAM,CAACE,MAAP,GAAc,CAAzB;AAA2BE,QAAAA,WAAW,GAAC,CAAZ;AAAcC,QAAAA,UAAU,GAAC,CAAX;AAAa,OAA9E,MAAkF;AAACF,QAAAA,UAAU,GAACG,CAAX;AAAaF,QAAAA,WAAW,GAACE,CAAC,GAAC,CAAd;AAAgBD,QAAAA,UAAU,GAACC,CAAC,GAAC,CAAb;AAAe;;AAAA,UAAIC,KAAK,GAAC,CAAC,GAAEZ,aAAa,CAACL,OAAjB,EAA0BU,MAAM,CAACG,UAAD,CAAhC,CAAV;AAAwD,UAAIK,KAAK,GAAC,CAAC,GAAEd,YAAY,CAACJ,OAAhB,EAAyBU,MAAM,CAACI,WAAD,CAA/B,CAAV;AAAwD,UAAIK,KAAK,GAAC,CAAC,GAAEd,aAAa,CAACL,OAAjB,EAA0BU,MAAM,CAACK,UAAD,CAAhC,CAAV;AAAwDJ,MAAAA,IAAI,IAAE,CAAC,CAAC,GAAEV,MAAM,CAACD,OAAV,EAAmBmB,KAAnB,IAA0B,CAAC,GAAElB,MAAM,CAACD,OAAV,EAAmBiB,KAAnB,CAA3B,IAAsDG,IAAI,CAACC,GAAL,CAAS,CAAC,GAAEpB,MAAM,CAACD,OAAV,EAAmBkB,KAAnB,CAAT,CAA5D;AAAgG;;AAAAP,IAAAA,IAAI,GAACA,IAAI,GAACL,UAAU,CAACgB,WAAhB,GAA4BhB,UAAU,CAACgB,WAAvC,GAAmD,CAAxD;AAA0D;;AAAA,SAAOF,IAAI,CAACG,GAAL,CAASZ,IAAT,CAAP;AAAsB,CAA7tB;;AAA8tB,IAAIa,QAAQ,GAACf,gBAAb;AAA8BX,OAAO,CAACE,OAAR,GAAgBwB,QAAhB","sourcesContent":["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _toRad=_interopRequireDefault(require(\"./toRad\"));var _getLatitude=_interopRequireDefault(require(\"./getLatitude\"));var _getLongitude=_interopRequireDefault(require(\"./getLongitude\"));var _constants=require(\"./constants\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var getAreaOfPolygon=function getAreaOfPolygon(points){var area=0;if(points.length>2){var lowerIndex;var middleIndex;var upperIndex;for(var i=0;i<points.length;i++){if(i===points.length-2){lowerIndex=points.length-2;middleIndex=points.length-1;upperIndex=0}else if(i===points.length-1){lowerIndex=points.length-1;middleIndex=0;upperIndex=1}else{lowerIndex=i;middleIndex=i+1;upperIndex=i+2}var p1lon=(0,_getLongitude.default)(points[lowerIndex]);var p2lat=(0,_getLatitude.default)(points[middleIndex]);var p3lon=(0,_getLongitude.default)(points[upperIndex]);area+=((0,_toRad.default)(p3lon)-(0,_toRad.default)(p1lon))*Math.sin((0,_toRad.default)(p2lat))}area=area*_constants.earthRadius*_constants.earthRadius/2}return Math.abs(area)};var _default=getAreaOfPolygon;exports.default=_default;"]},"metadata":{},"sourceType":"script"}