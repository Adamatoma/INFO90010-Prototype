{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = require(\"./constants\");\n\nvar convertSpeed = function convertSpeed(metersPerSecond) {\n  var targetUnit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"kmh\";\n\n  switch (targetUnit) {\n    case \"kmh\":\n      return metersPerSecond * _constants.timeConversion.h * _constants.distanceConversion.km;\n\n    case \"mph\":\n      return metersPerSecond * _constants.timeConversion.h * _constants.distanceConversion.mi;\n\n    default:\n      return metersPerSecond;\n  }\n};\n\nvar _default = convertSpeed;\nexports.default = _default;","map":{"version":3,"sources":["/Users/panyutong/Desktop/学习/INFO90010 IT project/prototype/INFO90010-Prototype/frontend/node_modules/geolib/es/convertSpeed.js"],"names":["Object","defineProperty","exports","value","default","_constants","require","convertSpeed","metersPerSecond","targetUnit","arguments","length","undefined","timeConversion","h","distanceConversion","km","mi","_default"],"mappings":"AAAA;;AAAaA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA8B,YAA9B,EAA2C;AAACC,EAAAA,KAAK,EAAC;AAAP,CAA3C;AAAyDD,OAAO,CAACE,OAAR,GAAgB,KAAK,CAArB;;AAAuB,IAAIC,UAAU,GAACC,OAAO,CAAC,aAAD,CAAtB;;AAAsC,IAAIC,YAAY,GAAC,SAASA,YAAT,CAAsBC,eAAtB,EAAsC;AAAC,MAAIC,UAAU,GAACC,SAAS,CAACC,MAAV,GAAiB,CAAjB,IAAoBD,SAAS,CAAC,CAAD,CAAT,KAAeE,SAAnC,GAA6CF,SAAS,CAAC,CAAD,CAAtD,GAA0D,KAAzE;;AAA+E,UAAOD,UAAP;AAAmB,SAAI,KAAJ;AAAU,aAAOD,eAAe,GAACH,UAAU,CAACQ,cAAX,CAA0BC,CAA1C,GAA4CT,UAAU,CAACU,kBAAX,CAA8BC,EAAjF;;AAAoF,SAAI,KAAJ;AAAU,aAAOR,eAAe,GAACH,UAAU,CAACQ,cAAX,CAA0BC,CAA1C,GAA4CT,UAAU,CAACU,kBAAX,CAA8BE,EAAjF;;AAAoF;AAAQ,aAAOT,eAAP;AAAvN;AAAgP,CAAvX;;AAAwX,IAAIU,QAAQ,GAACX,YAAb;AAA0BL,OAAO,CAACE,OAAR,GAAgBc,QAAhB","sourcesContent":["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _constants=require(\"./constants\");var convertSpeed=function convertSpeed(metersPerSecond){var targetUnit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"kmh\";switch(targetUnit){case\"kmh\":return metersPerSecond*_constants.timeConversion.h*_constants.distanceConversion.km;case\"mph\":return metersPerSecond*_constants.timeConversion.h*_constants.distanceConversion.mi;default:return metersPerSecond;}};var _default=convertSpeed;exports.default=_default;"]},"metadata":{},"sourceType":"script"}