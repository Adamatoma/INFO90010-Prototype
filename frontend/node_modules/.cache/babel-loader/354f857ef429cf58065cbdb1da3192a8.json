{"ast":null,"code":"var _jsxFileName = \"/Users/panyutong/Desktop/\\u5B66\\u4E60/INFO90010 IT project/prototype/INFO90010-Prototype/frontend/src/components/Nav.jsx\";\nimport chainedFunction from 'chained-function';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { PureComponent, cloneElement } from 'react';\nimport NavItem from './NavItem';\nimport match from './match-component';\nimport styles from './index.styl';\n\nconst noop = () => {};\n\nclass Nav extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expandedNavItem: null,\n      selected: this.props.defaultSelected,\n      defaultSelected: this.props.defaultSelected\n    };\n    this.isNavItem = match(NavItem);\n  }\n\n  handleClickOnExpanded(eventKey, event) {\n    if (this.props.expanded) {\n      this.setState(state => ({\n        expandedNavItem: state.expandedNavItem !== eventKey ? eventKey : ''\n      }));\n    }\n  }\n\n  renderNavItem(child, {\n    onSelect,\n    ...props\n  }) {\n    const {\n      eventKey\n    } = { ...child.props\n    };\n    return cloneElement(child, { ...props,\n      onClick: chainedFunction(child.props.onClick, event => {\n        this.handleClickOnExpanded(eventKey, event);\n      }),\n      onSelect: chainedFunction(this.state.defaultSelected ? selected => {\n        this.setState({\n          selected: selected\n        });\n      } : noop, child.props.onSelect, onSelect)\n    });\n  }\n\n  render() {\n    const {\n      componentType,\n      // eslint-disable-line\n      componentClass: Component,\n      onSelect,\n      selected,\n      defaultSelected,\n      // eslint-disable-line\n      // Props passed from SideNav component\n      expanded,\n      className,\n      children,\n      ...props\n    } = this.props;\n    const currentSelected = this.state.defaultSelected ? this.state.selected : selected;\n    return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      role: \"menu\",\n      className: cx(className, styles.sidenavNav, {\n        [styles.expanded]: expanded\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }), React.Children.map(children, child => {\n      if (React.isValidElement(child) && this.isNavItem(child)) {\n        return this.renderNavItem(child, {\n          onSelect,\n          selected: currentSelected,\n          expanded: !!child.props.expanded || expanded && !!this.state.expandedNavItem && this.state.expandedNavItem === child.props.eventKey\n        });\n      }\n\n      return child;\n    }));\n  }\n\n} // For component matching\n\n\nNav.propTypes = {\n  componentType: PropTypes.any,\n  // A custom element for this component.\n  componentClass: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  // Callback fired when a navigation item is selected.\n  onSelect: PropTypes.func,\n  // The selected navigation item.\n  selected: PropTypes.any,\n  // The initially selected navigation item.\n  defaultSelected: PropTypes.any,\n  //\n  // SideNav props\n  //\n  // Whether the side navigation is expanded or collapsed.\n  expanded: PropTypes.bool\n};\nNav.defaultProps = {\n  componentClass: 'div'\n};\nNav.defaultProps.componentType = Nav;\nexport default Nav;","map":{"version":3,"sources":["/Users/panyutong/Desktop/学习/INFO90010 IT project/prototype/INFO90010-Prototype/frontend/src/components/Nav.jsx"],"names":["chainedFunction","cx","PropTypes","React","PureComponent","cloneElement","NavItem","match","styles","noop","Nav","state","expandedNavItem","selected","props","defaultSelected","isNavItem","handleClickOnExpanded","eventKey","event","expanded","setState","renderNavItem","child","onSelect","onClick","render","componentType","componentClass","Component","className","children","currentSelected","sidenavNav","Children","map","isValidElement","propTypes","any","oneOfType","string","func","bool","defaultProps"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,kBAA5B;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,EAA+BC,YAA/B,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,IAAI,GAAG,MAAM,CAAE,CAArB;;AAEA,MAAMC,GAAN,SAAkBN,aAAlB,CAAgC;AAAA;AAAA;AAAA,SA8B5BO,KA9B4B,GA8BpB;AACJC,MAAAA,eAAe,EAAE,IADb;AAEJC,MAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,eAFjB;AAGJA,MAAAA,eAAe,EAAE,KAAKD,KAAL,CAAWC;AAHxB,KA9BoB;AAAA,SAoC5BC,SApC4B,GAoChBT,KAAK,CAACD,OAAD,CApCW;AAAA;;AAsC5BW,EAAAA,qBAAqB,CAACC,QAAD,EAAWC,KAAX,EAAkB;AACnC,QAAI,KAAKL,KAAL,CAAWM,QAAf,EAAyB;AACrB,WAAKC,QAAL,CAAcV,KAAK,KAAK;AACpBC,QAAAA,eAAe,EAAED,KAAK,CAACC,eAAN,KAA0BM,QAA1B,GAAqCA,QAArC,GAAgD;AAD7C,OAAL,CAAnB;AAGH;AACJ;;AACDI,EAAAA,aAAa,CAACC,KAAD,EAAQ;AAAEC,IAAAA,QAAF;AAAY,OAAGV;AAAf,GAAR,EAAgC;AACzC,UAAM;AAAEI,MAAAA;AAAF,QAAe,EAAE,GAAGK,KAAK,CAACT;AAAX,KAArB;AAEA,WAAOT,YAAY,CAACkB,KAAD,EAAQ,EACvB,GAAGT,KADoB;AAEvBW,MAAAA,OAAO,EAAEzB,eAAe,CACpBuB,KAAK,CAACT,KAAN,CAAYW,OADQ,EAEnBN,KAAD,IAAW;AACP,aAAKF,qBAAL,CAA2BC,QAA3B,EAAqCC,KAArC;AACH,OAJmB,CAFD;AAQvBK,MAAAA,QAAQ,EAAExB,eAAe,CACrB,KAAKW,KAAL,CAAWI,eAAX,GACKF,QAAD,IAAc;AACV,aAAKQ,QAAL,CAAc;AAAER,UAAAA,QAAQ,EAAEA;AAAZ,SAAd;AACH,OAHL,GAGQJ,IAJa,EAKrBc,KAAK,CAACT,KAAN,CAAYU,QALS,EAMrBA,QANqB;AARF,KAAR,CAAnB;AAiBH;;AACDE,EAAAA,MAAM,GAAG;AACL,UAAM;AACFC,MAAAA,aADE;AACa;AACfC,MAAAA,cAAc,EAAEC,SAFd;AAGFL,MAAAA,QAHE;AAIFX,MAAAA,QAJE;AAKFE,MAAAA,eALE;AAKe;AAEjB;AACAK,MAAAA,QARE;AAUFU,MAAAA,SAVE;AAWFC,MAAAA,QAXE;AAYF,SAAGjB;AAZD,QAaF,KAAKA,KAbT;AAeA,UAAMkB,eAAe,GAAG,KAAKrB,KAAL,CAAWI,eAAX,GAClB,KAAKJ,KAAL,CAAWE,QADO,GAElBA,QAFN;AAIA,wBACI,oBAAC,SAAD,oBACQC,KADR;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,SAAS,EAAEb,EAAE,CACT6B,SADS,EAETtB,MAAM,CAACyB,UAFE,EAGT;AAAE,SAACzB,MAAM,CAACY,QAAR,GAAmBA;AAArB,OAHS,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASKjB,KAAK,CAAC+B,QAAN,CAAeC,GAAf,CAAmBJ,QAAnB,EAA6BR,KAAK,IAAI;AACnC,UAAIpB,KAAK,CAACiC,cAAN,CAAqBb,KAArB,KAA+B,KAAKP,SAAL,CAAeO,KAAf,CAAnC,EAA0D;AACtD,eAAO,KAAKD,aAAL,CAAmBC,KAAnB,EAA0B;AAC7BC,UAAAA,QAD6B;AAE7BX,UAAAA,QAAQ,EAAEmB,eAFmB;AAG7BZ,UAAAA,QAAQ,EAAG,CAAC,CAACG,KAAK,CAACT,KAAN,CAAYM,QAAf,IACLA,QAAQ,IAAI,CAAC,CAAC,KAAKT,KAAL,CAAWC,eAAzB,IAA4C,KAAKD,KAAL,CAAWC,eAAX,KAA+BW,KAAK,CAACT,KAAN,CAAYI;AAJ/D,SAA1B,CAAP;AAMH;;AAED,aAAOK,KAAP;AACH,KAXA,CATL,CADJ;AAwBH;;AA9G2B,C,CAiHhC;;;AAjHMb,G,CACK2B,S,GAAY;AACfV,EAAAA,aAAa,EAAEzB,SAAS,CAACoC,GADV;AAGf;AACAV,EAAAA,cAAc,EAAE1B,SAAS,CAACqC,SAAV,CAAoB,CAChCrC,SAAS,CAACsC,MADsB,EAEhCtC,SAAS,CAACuC,IAFsB,CAApB,CAJD;AASf;AACAjB,EAAAA,QAAQ,EAAEtB,SAAS,CAACuC,IAVL;AAYf;AACA5B,EAAAA,QAAQ,EAAEX,SAAS,CAACoC,GAbL;AAef;AACAvB,EAAAA,eAAe,EAAEb,SAAS,CAACoC,GAhBZ;AAkBf;AACA;AACA;AAEA;AACAlB,EAAAA,QAAQ,EAAElB,SAAS,CAACwC;AAvBL,C;AADjBhC,G,CA0BKiC,Y,GAAe;AAClBf,EAAAA,cAAc,EAAE;AADE,C;AAwF1BlB,GAAG,CAACiC,YAAJ,CAAiBhB,aAAjB,GAAiCjB,GAAjC;AAEA,eAAeA,GAAf","sourcesContent":["import chainedFunction from 'chained-function';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { PureComponent, cloneElement } from 'react';\nimport NavItem from './NavItem';\nimport match from './match-component';\nimport styles from './index.styl';\n\nconst noop = () => {};\n\nclass Nav extends PureComponent {\n    static propTypes = {\n        componentType: PropTypes.any,\n\n        // A custom element for this component.\n        componentClass: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.func\n        ]),\n\n        // Callback fired when a navigation item is selected.\n        onSelect: PropTypes.func,\n\n        // The selected navigation item.\n        selected: PropTypes.any,\n\n        // The initially selected navigation item.\n        defaultSelected: PropTypes.any,\n\n        //\n        // SideNav props\n        //\n\n        // Whether the side navigation is expanded or collapsed.\n        expanded: PropTypes.bool\n    };\n    static defaultProps = {\n        componentClass: 'div'\n    };\n\n    state = {\n        expandedNavItem: null,\n        selected: this.props.defaultSelected,\n        defaultSelected: this.props.defaultSelected\n    };\n\n    isNavItem = match(NavItem);\n\n    handleClickOnExpanded(eventKey, event) {\n        if (this.props.expanded) {\n            this.setState(state => ({\n                expandedNavItem: state.expandedNavItem !== eventKey ? eventKey : ''\n            }));\n        }\n    }\n    renderNavItem(child, { onSelect, ...props }) {\n        const { eventKey } = { ...child.props };\n\n        return cloneElement(child, {\n            ...props,\n            onClick: chainedFunction(\n                child.props.onClick,\n                (event) => {\n                    this.handleClickOnExpanded(eventKey, event);\n                }\n            ),\n            onSelect: chainedFunction(\n                this.state.defaultSelected ?\n                    (selected) => {\n                        this.setState({ selected: selected });\n                    } : noop,\n                child.props.onSelect,\n                onSelect\n            )\n        });\n    }\n    render() {\n        const {\n            componentType, // eslint-disable-line\n            componentClass: Component,\n            onSelect,\n            selected,\n            defaultSelected, // eslint-disable-line\n\n            // Props passed from SideNav component\n            expanded,\n\n            className,\n            children,\n            ...props\n        } = this.props;\n\n        const currentSelected = this.state.defaultSelected\n            ? this.state.selected\n            : selected;\n\n        return (\n            <Component\n                {...props}\n                role=\"menu\"\n                className={cx(\n                    className,\n                    styles.sidenavNav,\n                    { [styles.expanded]: expanded }\n                )}\n            >\n                {React.Children.map(children, child => {\n                    if (React.isValidElement(child) && this.isNavItem(child)) {\n                        return this.renderNavItem(child, {\n                            onSelect,\n                            selected: currentSelected,\n                            expanded: (!!child.props.expanded) ||\n                                (expanded && !!this.state.expandedNavItem && this.state.expandedNavItem === child.props.eventKey)\n                        });\n                    }\n\n                    return child;\n                })}\n            </Component>\n        );\n    }\n}\n\n// For component matching\nNav.defaultProps.componentType = Nav;\n\nexport default Nav;\n"]},"metadata":{},"sourceType":"module"}