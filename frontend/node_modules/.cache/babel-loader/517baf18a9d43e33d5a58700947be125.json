{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _getLatitude = _interopRequireDefault(require(\"./getLatitude\"));\n\nvar _getLongitude = _interopRequireDefault(require(\"./getLongitude\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar isPointInPolygon = function isPointInPolygon(point, polygon) {\n  var isInside = false;\n  var totalPolys = polygon.length;\n\n  for (var i = -1, j = totalPolys - 1; ++i < totalPolys; j = i) {\n    if (((0, _getLongitude.default)(polygon[i]) <= (0, _getLongitude.default)(point) && (0, _getLongitude.default)(point) < (0, _getLongitude.default)(polygon[j]) || (0, _getLongitude.default)(polygon[j]) <= (0, _getLongitude.default)(point) && (0, _getLongitude.default)(point) < (0, _getLongitude.default)(polygon[i])) && (0, _getLatitude.default)(point) < ((0, _getLatitude.default)(polygon[j]) - (0, _getLatitude.default)(polygon[i])) * ((0, _getLongitude.default)(point) - (0, _getLongitude.default)(polygon[i])) / ((0, _getLongitude.default)(polygon[j]) - (0, _getLongitude.default)(polygon[i])) + (0, _getLatitude.default)(polygon[i])) {\n      isInside = !isInside;\n    }\n  }\n\n  return isInside;\n};\n\nvar _default = isPointInPolygon;\nexports.default = _default;","map":{"version":3,"sources":["/Users/panyutong/Desktop/学习/INFO90010 IT project/prototype/INFO90010-Prototype/frontend/node_modules/geolib/es/isPointInPolygon.js"],"names":["Object","defineProperty","exports","value","default","_getLatitude","_interopRequireDefault","require","_getLongitude","obj","__esModule","isPointInPolygon","point","polygon","isInside","totalPolys","length","i","j","_default"],"mappings":"AAAA;;AAAaA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA8B,YAA9B,EAA2C;AAACC,EAAAA,KAAK,EAAC;AAAP,CAA3C;AAAyDD,OAAO,CAACE,OAAR,GAAgB,KAAK,CAArB;;AAAuB,IAAIC,YAAY,GAACC,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAvC;;AAAkE,IAAIC,aAAa,GAACF,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAAxC;;AAAoE,SAASD,sBAAT,CAAgCG,GAAhC,EAAoC;AAAC,SAAOA,GAAG,IAAEA,GAAG,CAACC,UAAT,GAAoBD,GAApB,GAAwB;AAACL,IAAAA,OAAO,EAACK;AAAT,GAA/B;AAA6C;;AAAA,IAAIE,gBAAgB,GAAC,SAASA,gBAAT,CAA0BC,KAA1B,EAAgCC,OAAhC,EAAwC;AAAC,MAAIC,QAAQ,GAAC,KAAb;AAAmB,MAAIC,UAAU,GAACF,OAAO,CAACG,MAAvB;;AAA8B,OAAI,IAAIC,CAAC,GAAC,CAAC,CAAP,EAASC,CAAC,GAACH,UAAU,GAAC,CAA1B,EAA4B,EAAEE,CAAF,GAAIF,UAAhC,EAA2CG,CAAC,GAACD,CAA7C,EAA+C;AAAC,QAAG,CAAC,CAAC,GAAET,aAAa,CAACJ,OAAjB,EAA0BS,OAAO,CAACI,CAAD,CAAjC,KAAuC,CAAC,GAAET,aAAa,CAACJ,OAAjB,EAA0BQ,KAA1B,CAAvC,IAAyE,CAAC,GAAEJ,aAAa,CAACJ,OAAjB,EAA0BQ,KAA1B,IAAiC,CAAC,GAAEJ,aAAa,CAACJ,OAAjB,EAA0BS,OAAO,CAACK,CAAD,CAAjC,CAA1G,IAAiJ,CAAC,GAAEV,aAAa,CAACJ,OAAjB,EAA0BS,OAAO,CAACK,CAAD,CAAjC,KAAuC,CAAC,GAAEV,aAAa,CAACJ,OAAjB,EAA0BQ,KAA1B,CAAvC,IAAyE,CAAC,GAAEJ,aAAa,CAACJ,OAAjB,EAA0BQ,KAA1B,IAAiC,CAAC,GAAEJ,aAAa,CAACJ,OAAjB,EAA0BS,OAAO,CAACI,CAAD,CAAjC,CAA5P,KAAoS,CAAC,GAAEZ,YAAY,CAACD,OAAhB,EAAyBQ,KAAzB,IAAgC,CAAC,CAAC,GAAEP,YAAY,CAACD,OAAhB,EAAyBS,OAAO,CAACK,CAAD,CAAhC,IAAqC,CAAC,GAAEb,YAAY,CAACD,OAAhB,EAAyBS,OAAO,CAACI,CAAD,CAAhC,CAAtC,KAA6E,CAAC,GAAET,aAAa,CAACJ,OAAjB,EAA0BQ,KAA1B,IAAiC,CAAC,GAAEJ,aAAa,CAACJ,OAAjB,EAA0BS,OAAO,CAACI,CAAD,CAAjC,CAA9G,KAAsJ,CAAC,GAAET,aAAa,CAACJ,OAAjB,EAA0BS,OAAO,CAACK,CAAD,CAAjC,IAAsC,CAAC,GAAEV,aAAa,CAACJ,OAAjB,EAA0BS,OAAO,CAACI,CAAD,CAAjC,CAA5L,IAAmO,CAAC,GAAEZ,YAAY,CAACD,OAAhB,EAAyBS,OAAO,CAACI,CAAD,CAAhC,CAA1iB,EAA+kB;AAACH,MAAAA,QAAQ,GAAC,CAACA,QAAV;AAAmB;AAAC;;AAAA,SAAOA,QAAP;AAAgB,CAAnxB;;AAAoxB,IAAIK,QAAQ,GAACR,gBAAb;AAA8BT,OAAO,CAACE,OAAR,GAAgBe,QAAhB","sourcesContent":["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _getLatitude=_interopRequireDefault(require(\"./getLatitude\"));var _getLongitude=_interopRequireDefault(require(\"./getLongitude\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var isPointInPolygon=function isPointInPolygon(point,polygon){var isInside=false;var totalPolys=polygon.length;for(var i=-1,j=totalPolys-1;++i<totalPolys;j=i){if(((0,_getLongitude.default)(polygon[i])<=(0,_getLongitude.default)(point)&&(0,_getLongitude.default)(point)<(0,_getLongitude.default)(polygon[j])||(0,_getLongitude.default)(polygon[j])<=(0,_getLongitude.default)(point)&&(0,_getLongitude.default)(point)<(0,_getLongitude.default)(polygon[i]))&&(0,_getLatitude.default)(point)<((0,_getLatitude.default)(polygon[j])-(0,_getLatitude.default)(polygon[i]))*((0,_getLongitude.default)(point)-(0,_getLongitude.default)(polygon[i]))/((0,_getLongitude.default)(polygon[j])-(0,_getLongitude.default)(polygon[i]))+(0,_getLatitude.default)(polygon[i])){isInside=!isInside}}return isInside};var _default=isPointInPolygon;exports.default=_default;"]},"metadata":{},"sourceType":"script"}